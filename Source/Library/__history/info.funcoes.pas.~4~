unit info.funcoes;

interface

uses
   System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  System.StrUtils,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs,
  FMX.Controls.Presentation, FMX.StdCtrls, FMX.Objects, FMX.Ani, FMX.Layouts,
  Xml.xmldom,Xml.XMLIntf, Xml.XMLDoc;

 Function gravar_pessoa_xml(Nome,Identidade,Cpf,Telefone,email,Cep,Logradouro,
                        Numero,Complemento,Bairro,Cidade,Estado,Pais:string):Boolean;

implementation

Function gravar_pessoa_xml(Nome,Identidade,Cpf,Telefone,email,Cep,Logradouro,
                        Numero,Complemento,Bairro,Cidade,Estado,Pais:string):Boolean;
Var
  XML : IXMLDOCUMENT;
  NodeTabela, NodeRegistro, NodeEndereco: IXMLNode;
  I: Integer;
  Caminho,Arquivo:string;
begin
  XML := NewXMLDocument;
  XML.Encoding := 'utf-8';
  XML.Options := [doNodeAutoIndent]; // looks better in Editor ;)
   try
    XML.Active := True;
    NodeTabela := XML.AddChild('Pessoa');
    for I := 1 to 5 do
    begin
      NodeRegistro := NodeTabela.AddChild('Registro');
      NodeRegistro.no;
      NodeRegistro.ChildValues['Nome'] := Nome;
     // NodeRegistro.ChildValues['Nome'] := 'NOME ' + IntToStr(I);
     // NodeEndereco := NodeRegistro.AddChild('Endereco');
     // NodeEndereco.ChildValues['Logradouro'] := Format('RUA %d', [I]);
     // NodeEndereco.ChildValues['Numero'] := I * 1000;
    end;
    Arquivo       := 'temp.xml';
    caminho       := ExtractFilePath(ParamStr(0));
     XML.SaveToFile(caminho+Arquivo);

  finally

  end;

end;


end.
